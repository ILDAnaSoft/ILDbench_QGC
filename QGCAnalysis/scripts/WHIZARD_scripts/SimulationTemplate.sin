################################
# Start Integration            #
################################

  ! Fixed seed for reproducibility
  seed = 814995 

  integrate({process_name}) {{iterations = 10:500000, 3:1500000}} ! Similar to default, but more calls (Observed to be much more precise that DBD method)
  
  show(integral({process_name}))
  printf "Integral: %E , Error: %E " (integral({process_name}), error({process_name}))

################################
# Start Simulation             #
################################

  printf "################################################"
  printf "# Simulation :"
  printf "#   Events created according to:"
  printf "#     luminosity * cross-section"
  printf "#     luminosity = {luminosity}"
  printf "#   output_file:"
  printf "#     {out_file_base}.{sample_format}"
  printf "################################################"
  
  seed = 814995 + 1
  
  ! Activating hadronization, keep all previous information
  ?keep_remnants = true
  ?keep_beams = true
  ?hadronization_active = true
  sample_split_n_kbytes = 500000

  ! OPAL tune:
  $ps_PYTHIA_PYGIVE = "MSTJ(39)=15;MSTJ(28)=0; PMAS(25,1)=120.; PMAS(25,2)=0.3605E-02; MSTJ(41)=2; MSTU(22)=2000; PARJ(21)=0.40000; PARJ(41)=0.11000; PARJ(42)=0.52000; PARJ(81)=0.25000; PARJ(82)=1.90000; MSTJ(11)=3; PARJ(54)=-0.03100; PARJ(55)=-0.00200; PARJ(1)=0.08500; PARJ(3)=0.45000; PARJ(4)=0.02500; PARJ(2)=0.31000; PARJ(11)=0.60000; PARJ(12)=0.40000; PARJ(13)=0.72000; PARJ(14)=0.43000; PARJ(15)=0.08000; PARJ(16)=0.08000; PARJ(17)=0.17000;   MSTP(125)=2; MSTP(3)=1;MSTP(71)=1"
  ?ps_fsr_active = true
  $shower_method = "PYTHIA6"

  ! Activate tau decays -> Use Taola tool
  ?ps_taudec_active = true
  ! 0=all, 1=e, 2=mu, 3=pi, 4=rho, 5=a_1, ....
  ps_tauola_dec_mode1 = 3
  ps_tauola_dec_mode2 = 3
  
  simulate( {process_name} ) {{
    ! Give both lumi and minimal number of events -> WHIZARD chooses bigger one
    luminosity  = {luminosity}
    n_events    = 10000
    
    $sample = "{out_file_base}_events"
    sample_format = {sample_format} 
  }}
  
  logical ?is_signal = {is_signal}
  
  ! For rescanning: Produce signal samples again only contain initial particles
  !                 and the 2nu + 4q final state
  if ?is_signal then
    simulate( {process_name} ) {{
      seed = 814995 + 1
      ! Give both lumi and minimal number of events -> WHIZARD chooses bigger one
      luminosity  = {luminosity}
      n_events    = 10000
      
      $sample = "{out_file_base}_basic_events"
      sample_format = {sample_format} 
      
      ?resonance_history = false
      ?ps_fsr_active = false
      ?hadronization_active = false
      ?ps_taudec_active = false
    }}
  endif

  close_out ( $out_file ) 

  
