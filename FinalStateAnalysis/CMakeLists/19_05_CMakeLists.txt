########################################################
# cmake file for building Marlin example Package
# @author Jan Engels, Desy IT
CMAKE_MINIMUM_REQUIRED(VERSION 2.6 FATAL_ERROR)
########################################################


# project name
PROJECT( JakobsVBSProcessor )


# project version
SET( ${PROJECT_NAME}_VERSION_MAJOR 0 )
SET( ${PROJECT_NAME}_VERSION_MINOR 1 )
SET( ${PROJECT_NAME}_VERSION_PATCH 0 )


# Create compliation database to allow autocomplete
set( CMAKE_EXPORT_COMPILE_COMMANDS ON )

### DEPENDENCIES ############################################################

FIND_PACKAGE( ILCUTIL REQUIRED COMPONENTS ILCSOFT_CMAKE_MODULES )

# load default settings from ILCSOFT_CMAKE_MODULES
INCLUDE( ilcsoft_default_settings )

SET( ILC_HOME "/cvmfs/ilc.desy.de/sw/x86_64_gcc49_sl6/v01-19-05" CACHE PATH "Path to ILC Software" FORCE)
#SET( ILC_HOME "/cvmfs/ilc.desy.de/sw/x86_64_gcc49_sl6/v01-19-05" CACHE PATH "Path to ILC Software" FORCE)
MARK_AS_ADVANCED( ILC_HOME )

option(USE_CXX11 "Use cxx11" True)
option(Boost_NO_BOOST_CMAKE "dont use cmake find module for boost" ON)


FIND_PACKAGE( Marlin 1.0 REQUIRED ) # minimum required Marlin version
INCLUDE_DIRECTORIES( ${Marlin_INCLUDE_DIRS} )
#LINK_LIBRARIES( ${Marlin_LIBRARIES} )
LINK_LIBRARIES( ${Marlin_LIBRARIES} $ENV{ILCSOFT}/MarlinReco/v01-22/lib/libMarlinReco.so.1.22.0 )
ADD_DEFINITIONS( ${Marlin_DEFINITIONS} )

FIND_PACKAGE( ROOT REQUIRED )
INCLUDE_DIRECTORIES( ${ROOT_INCLUDE_DIRS} )
LINK_LIBRARIES( ${ROOT_LIBRARIES} )

FIND_PACKAGE( LCIO REQUIRED )
INCLUDE_DIRECTORIES( ${LCIO_INCLUDE_DIRS} )
LINK_LIBRARIES( ${LCIO_LIBRARIES} )


# optional package
#FIND_PACKAGE( AIDA )
#IF( AIDA_FOUND )
#    INCLUDE_DIRECTORIES( ${AIDA_INCLUDE_DIRS} )
#    LINK_LIBRARIES( ${AIDA_LIBRARIES} )
#    ADD_DEFINITIONS( "-DMARLIN_USE_AIDA" )
#    MESSAGE( STATUS "AIDA -- found" )
#ELSE()
#    MESSAGE( STATUS "AIDA -- not found" )
#ENDIF()



### DOCUMENTATION ###########################################################

OPTION( INSTALL_DOC "Set to OFF to skip build/install Documentation" OFF )

IF( INSTALL_DOC AND EXISTS "${PROJECT_SOURCE_DIR}/doc/CMakeLists.txt" )
    ADD_SUBDIRECTORY( ./doc )
ENDIF()



### LIBRARY #################################################################

# definitions to pass to the compiler
 ADD_DEFINITIONS( "-w -ansi -pedantic -std=gnu++11" )
 #ADD_DEFINITIONS( "-Wall -ansi -pedantic -std=gnu++11" )
 #ADD_DEFINITIONS( "-Wno-long-long" )

# include directories
INCLUDE_DIRECTORIES( ./include ./include/InformationStorages )
#INSTALL_DIRECTORY( ./include DESTINATION . FILES_MATCHING PATTERN "*.h" )

# add library
AUX_SOURCE_DIRECTORY( ./src library_source )
AUX_SOURCE_DIRECTORY( ./src/TreeBranches tree_branches_source )
AUX_SOURCE_DIRECTORY( ./src/TJRoutines TJ_routines_source )
ADD_SHARED_LIBRARY( ${PROJECT_NAME} ${library_source} ${tree_branches_source} ${TJ_routines_source})
INSTALL_SHARED_LIBRARY( ${PROJECT_NAME} DESTINATION lib )

# display some variables and write them to cache
DISPLAY_STD_VARIABLES()

